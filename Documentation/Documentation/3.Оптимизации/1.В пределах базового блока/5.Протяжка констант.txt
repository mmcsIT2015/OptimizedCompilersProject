__Постановка задачи__

Протяжка констант в каждом базовом блоке

__Входные данные__

На вход алгоритму подается трехадресный код, разбитый на базовые блоки

__Выходные данные__

Трехадресный код, с примененной оптимизацией

__Описание алгоритма__

Для реализации алгоритма используется def-use информация о переменных внутри базовых блоков.
Идея алгоритма заключается в проходе каждой строки трехадресного кода и поиска константных значений для переменных, учавствующих в данной строке, 
по следующему алгоритму:
	1. Фиксирование рассматриваемой строки трехадресного кода.
	2. Анализ def-use информации для каждой перменной, учавствующей в операции, и выбор строки, в которой располагается её константное значение.
	3. Протяжка константного значения на место переменной в трехадресном коде.

__Пример использования__

~~~~~~~{.cs}

	ThreeAddrCode code;
	
	// ...
	
	DraggingConstantsOptimization dco = new DraggingConstantsOptimization(code);
	dco.Optimize();
	
	// Дальнейшее использование code

~~~~~~~~~~~~~~

__Пример оптимизации__

Начальный код:

	x = 2
	y = x + z
	c = 5
	b = a + x
	z = c + x
	s = c
	
Результат оптимизации:
	
	x = 2
	y = 2 + z
	c = 5
	b = a + 2
	z = 5 + 2
	s = 5
	