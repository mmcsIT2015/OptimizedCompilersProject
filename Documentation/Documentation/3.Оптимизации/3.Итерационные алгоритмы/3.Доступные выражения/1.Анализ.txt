# Анализ доступных выражений

Класс ReachableExprsGenerator имеет несколько важных статических методов:

1) Генерация Gen-Kill

~~~~~~{.cs}
private static Dictionary<Block, ExpressionGenKill> BuildExpressionsGenKill(ThreeAddrCode code)
~~~~~~

Принимает на вход трехадреснный код и генерирует множества gen и kill, используемые в итерационном алгоритме. 
Эти множества формируются по следующим правилам:

множество gen - множество выражений, которые генерирует базовый блок и далее переменные входящие эти выражения
не переопределяются до конца базового блока.

множество kill - множество выражений все программы, что переменные входящие в них переопредяются в текущем
базового блоке и потом эти выражения не генерируются базовым блоком заново.

2) Конвертация из внутреннего представления множеств Gen-Kill в представление совместимео с остальными решениями.

~~~~~~{.cs}
public static InOutData<Line.Expr> BuildReachableExpressionsGenKill(ThreeAddrCode code)
~~~~~~

(деталь реализации)

3) Постройка передаточной функции:

~~~~~~{.cs}
public static Dictionary<Block, TransferFunction<ExpressionWrapper>> BuildTransferFuncsForReachableExprs(ThreeAddrCode code)
~~~~~~

в соответствии с общими правилами строит передаточную функцию с множествами Gen-Kill для доступных выражений


Важно отметить, что применение полученной передаточной функции в итерационном алгоритме осуществлеятся
с использованием полурештки с основной операцие пересечения. Верхним элементом будет просто множество всех
выражений.