
__Передаточная функция__ - это, вообще говоря,  отображение значений из одного множества в значения другого множества. Согласно известной теореме:

> Суперпозиция передаточных функций определенного вида не выводит из класса таких функций, т.е. является функцией того же вида


Таким образом, передаточная функция реализует интерфейс

~~~~~~{.cs}
public interface ITransferFunction<T> {
    IEnumerable<T> Map(IEnumerable<T> x); // отображение
    ITransferFunction<T> Map(ITransferFunction<T> f1); // суперпозиция
}
~~~~~~

Для большинства задач, связанных с анализом потока данных, передаточная функция имеет вид

```
F(x) = A `UNION` (x - B)
```

Класс TransferFunction<T>, наследующий интерфейс ITransferFunction<T>, при реализации функции `Map(IEnumerable<T> x)` выполняет именно это действие.

#### Суперпозиция передаточных функций

Как было сказано выше, композиция передаточных функций не выводит из класса передаточных функций. В случае необходимости получить композицию некоторого набора передаточных функций, можно поступить двумя способами:

1. Последовательное применение суперпозиции поочередно ко всем функциям набора.

2. Оказывается, существует формула, которая позволяет бычислить композицию набора передаточных функций. Ниже продемонстрирован вид этой формулы для множеств `gen`/`kill`.
```
  f[n] . ... . f[2] . f[1] = g `UNION` (x - k), где
```
```
  k = kill[1] `UNION` kill[2] `UNION` ... `UNION` kill[n]

  g = gen[n] `UNION` (gen[n-1] - kill[n]) `UNION`
      (gen[n-2] - kill[n-1] - kill[n]) `UNION ... `UNION` 
      (gen[1] - kill[2] - ... - kill[n])
```
