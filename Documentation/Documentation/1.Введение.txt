
Современный мир сильно зависит от различных электронных устройств, к которым мы привыкли и без которых мы уже не мыслим своей жизни. Работа электронных устройств, в свою очередь, сильно зависит от программного обеспечения, которым оно управлляется. Поэтому очень актуальной задачей является автоматическая оптимизация исходного кода программы, которая позволяет ускорить скорость выполнения тех или иных программ, что в свою очередь улучшает характеристики электронного устройства.

Стояла задача реализовать программный комплекс, который позволял бы проводить оптимизации над трехадресным кодом программы и компилировать этот трехадресный код в IL-код. IL-код, в свою очередь, должен был быть использован для создания исполняемого файла с помощью соответствующего компилятора, который доступен в платформе *Net*.

В рамках задачи предлагалось реализовать в коде два языка, основанных на различных грамматиках - схожей с языком `C`, и схожей с языком `Pascal`. При этом все различия между грамматиками стирались уже на этапе генерации синтаксического дерева - его структура для обеих грамматик была идентична.

В качестве генераторов синтаксического и лексического анализаторов было решено использовать программы *Yacc* и *Lex*, которые широко используются для подобных целей. Также выбор обусловлен легкостью интеграции данных, генерируемых упомянутыми программами с языком C# - *Yacc* и *Lex* позволяют генерировать код непосредственно для этого языка, и предоставляют для этого удобные механизмы.

Синтаксическое дерево преобразовывалось в трехадресный код, над которым и проводились все оптимизации.

Также в процессе разработки возникла идея интеграции оптимизаций, реализованных в рамках курса, с синтаксическим деревом языка `PascalABC.Net`.

Представленный отчет содержит информацию об использованных или разработанных алгоритмах, которые решали поставленные - а также возникшие в процессе разработки - задачи.
