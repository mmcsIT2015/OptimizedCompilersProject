__Постановка задачи__

Разработка шаблона для документации

__Описание__

Все компоненты документации находяться в папке Documentation в корне проекта

Документация представляет из себя дерево из папок и файлов сл. формата:

1. файл: номер.заголовок.txt (параграф)
2. папка: номер.заголовок (раздел)

Особенности

- Структуру документации можно менять, добавляя, удаляя папки и файлы, и изменяя номера соотвествующих папок и файлов

- Для собрания документации в единый текстовый файл необходимо вызвать программу DocumentationAssembler.exe. Эта программа:

1. Распологает текст из файлов в порядке их следования (по номерам), учитывая вложения
2. Добавляет заголовоки с номерами всех разделов (пр.: 1.4.2 Реализация RDV)
3. Учитывает глубину вложенности заголовка и добавляет перед ним соответствующее кол-во решеток (# для 0ого уровня, ## для 1ого, и т.д.) для соответсвия markdown
4. Добавляет пустую строку после файла
5. Корневые разделы документации распологать в папке Documentation
6. Результат в файле OptimizedCompilersProjectDocumentation.txt

Файлы/папки в одном разделе с одинаковыми номерами не использовать

Затем необходимо использовать утилиту для форматирования текстов в зависимости от формата файлов документции. 
В данном случае используется консольная утилита pundoc, которая поддерживает расширенный формат markdown.

Готовый для использования скрипт, который собирает, форматирует и конверитует текст в формат DOCX, находиться в файле toDOCX.bat

__Реализация__

Исходный код прграммы DocumentationAssembler.exe находиться в проекте https://github.com/chekist131/DocumentationAssembler

Программа DocumentationAssembler.exe строит структуру данных дерево, состояющую из 2х типов вершин:

1. Параграфов
2. Разделов

Особенности

- Разделы могут включать в себя как параграфы, так и разделы
- Параграфы являются листьями. 
- Обход данного дерева осуществляется в глубину в порядке их нумерации
- Для реализации использовался паттерн 'visiter'

__Команда__
Альфа