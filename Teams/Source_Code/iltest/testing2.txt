{
	i = 0;
	while (i < 10)
	{
		j = 0;
		while (j < 10)
		{
			cout<<i*j;
			j = j + 1;
		}
		i = i + 1;
	}
}
_______________________________________________

	i = 0 

@l0:	@t0 = i Less 10
	if @t0 goto @l1

	goto @l2

@l1:	j = 0 

@l3:	@t1 = j Less 10
	if @t1 goto @l4

	goto @l5

@l4:	@t2 = i Mult j
	param @t2
	call cout, 1
	j = j Plus 1
	goto @l3

@l5:	<empty statement>
	i = i Plus 1
	goto @l0

@l2:	<empty statement>
_______________________________________________

.assembly extern mscorlib {}
.assembly program {}

.method static public void main() cil managed
{
	.entrypoint
	.maxstack 5
	.locals init (int32 i, int32 j, int32 t0, int32 t1, int32 t2)
	
	ldc.i4 0
	stloc i
l0:
	ldloc i
	ldc.i4 10
	clt
	stloc t0
	ldloc t0
	brtrue l1
	br l2
l1:
	ldc.i4 0
	stloc j
l3:
	ldloc j
	ldc.i4 10
	clt
	stloc t1
	ldloc t1
	brtrue l4
	br l5
l4:
	ldloc i
	ldloc j
	mul
	stloc t2
	ldloc t2
	call void [mscorlib]System.Console::WriteLine(int32)
	ldloc j
	ldc.i4 1
	add
	stloc j
	br l3
l5:
	nop
	ldloc i
	ldc.i4 1
	add
	stloc i
	br l0
l2:
	nop
	ret
}